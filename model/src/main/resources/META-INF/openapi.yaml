#
# Copyright (C) 2022 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: 3.0.3 # must be compatible with quarkus

# Note: the final OpenAPI definition file is produced at build time by merging this data with OpenAPI java annotations.

info:
  title: Nessie API
  version: ${project.version}
  contact:
    name: Project Nessie
    url: https://projectnessie.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

tags:
  - name: v1
    description: End points from the legacy v1 API that are still supported in v2 API
  - name: v2
    description: End point from the Nessie v2 API

paths: {} # inferred from java annotations

components:
  schemas:
    keyMergeModes:
      type: array
      items:
        $ref: '#/components/schemas/MergeKeyBehavior'
      description: |
        Specific merge behaviour requests by content key.
        
        The default is set by the `defaultKeyMergeMode` parameter.
    defaultKeyMergeMode:
      type:
        $ref: '#/components/schemas/MergeBehavior'
      description: |-
        The default merge mode. If not set `NORMAL` is assumed.

        This settings applies to key that are not explicitly mentioned in the `keyMergeModes` property.
    dryRun:
      type: boolean
      description: When set to 'true' instructs the server to validate the request
        but to avoid committing any changes.
    fetchAdditionalInfo:
      type: boolean
      description: Whether to provide optional response data.
    returnConflictAsResult:
      type: boolean
      description: When set to 'true' instructs the server to produce normal (non-error)
        responses in case a conflict is detected and report conflict details in
        the response payload.
    fromRefName:
      description: The name of the reference that contains the 'source' commits
        for the requested merge or transplant operation.
      pattern: "^[A-Za-z](((?![.][.])[A-Za-z0-9./_-])*[A-Za-z0-9_-])?$"
      type: string

  parameters:
    refPathParameter: &refPathParam
      name: "ref"
      in: "path"
      required: true
      description: |
        A reference to a particular version of the contents tree (a point in history). 
        A reference can be specification in these forms:
        - \- (literal minus character) - identifies the HEAD of the default branch 
        - name - identifies the HEAD commit of a branch or tag
        - name@hash - identifies the 'hash' commit on a branch or tag
        - @hash - identifies the 'hash' commit in an unspecified branch or tag
        
        If both 'name' and 'hash' are given, 'hash' must be reachable from the current HEAD of the branch or tag.
        If 'name' is omitted, the reference will be of type 'DETACHED' (referencing a specific commit hash without
        claiming its reachability from any live HEAD). Using references of the last form may have authorization
        implications when compared to an equivalent reference of the former forms.
        
        The 'name@hash' form always refers to the exact commit on a specific branch or tag. This is the most complete 
        form of a reference. Other forms omit some of the details and require those gaps to be filled by the server at
        runtime. Although these forms may be convenient to a human being, they may resolve differently at different
        times depending on the state of the system. Using the full 'name@hash' form is recommended to avoid ambiguity.
      schema:
        pattern: "([^/]+|[^@]+@[^@/]*?)"
        type: string
      examples:
        ref:
          $ref: '#/components/examples/ref'
        refWithHash:
          $ref: '#/components/examples/refWithHash'
        refDefault:
          $ref: '#/components/examples/refDefault'
        refDetached:
          $ref: '#/components/examples/refDetached'

    checkedRefParameter:
      name: "ref"
      in: "path"
      required: true
      description: |
        Specifies a named branch or tag reference. 
        A named reference can be specification in these forms:
        - \- (literal minus character) - identifies the default branch 
        - name - identifies a branch or tag without a concrete HEAD 'hash' value
        - name@hash - identifies the 'hash' commit on a branch or tag
        
        If both 'name' and 'hash' are given, 'hash' must be the current HEAD of the branch or tag. It will be used to
        validate that at execution time the reference points to the same hash that the caller expected when the
        operation arguments were constructed.

        Not specifying the 'hash' value relaxes server-side checks and can lead to unexpected side effects if multiple
        changes to the same reference are executed concurrently. It is recommended to always specify the 'hash' value
        when assigning or deleting a reference.
        
        Note that deleting the default branch may not be allowed.
      schema:
        pattern: "([^/]+|[^@]+@[^@/]*?)"
        type: string
      examples:
        ref:
          $ref: '#/components/examples/ref'
        refWithHash:
          $ref: '#/components/examples/refWithHash'
        refDefault:
          $ref: '#/components/examples/refDefault'

    branchPathParameter:
      name: "branch"
      in: "path"
      required: true
      description: |
        A reference to a particular version of the contents tree (a point in history) on a branch.
        A reference can be specification in these forms:
        - \- (literal minus character) - identifies the HEAD of the default branch 
        - name - identifies the HEAD commit of a branch or tag
        - name@hash - identifies the 'hash' commit on a branch or tag
        
        If both 'name' and 'hash' are given, 'hash' must be reachable from the current HEAD of the branch or tag.
        In this case 'hash' indicates the state of contents that should be used for validating incoming changes
        (commits / merges / transplants).
        
        Note that using the simple 'name' form will effectively disable content conflict checks and is
        generally discouraged.
        
        The 'name@hash' form always refers to the exact commit on a specific branch. This is the most complete 
        form of a reference. Other forms omit some of the details and require those gaps to be filled by the server at
        runtime. Although these forms may be convenient to a human-being, they may resolve differently at different
        times depending on the state of the system. Using the full 'name@hash' form is recommended to avoid ambiguity.
      schema:
        pattern: "([^/]+|[^@]+@[^@/]*?)"
        type: string
      examples:
        ref:
          $ref: '#/components/examples/ref'
        refWithHash:
          $ref: '#/components/examples/refWithHash'
        refDefault:
          $ref: '#/components/examples/refDefault'

    refPathFromParameter:
      <<: *refPathParam
      name: from-ref

    refPathToParameter:
      <<: *refPathParam
      name: to-ref
      description: Same reference spec as in the 'from-ref' parameter but identifying the other tree for comparison.

    keyPathParameter: &keyPathParam
      name: "key"
      in: "path"
      required: true
      description: |
        The key to a content object. Key components (namespaces) are separated by the dot ('.') character. 
        Dot ('.') characters that are not Nessie namespace separators must be encoded as the 'group separator' 
        ASCII character (0x1D).
      schema:
        type: string
      examples:
        ContentKeyGet:
          $ref: '#/components/examples/ContentKeyGet'

    keyQueryParameter:
      <<: *keyPathParam
      in: "query"


  examples:
    nessieConfig:
      value:
        defaultBranch: main
        maxSupportedApiVersion: 2

    namespace:
      value: "a.b.c"

    ref:
      value: "main"

    refWithHash:
      value: "main@2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"

    refDefault:
      value: "-"

    refDetached:
      value: "@2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"

    referenceType:
      value: "branch"

    hash:
      value: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"

    nullHash:
      value:

    refObj:
      value:
        type: BRANCH
        hash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
        name: "main"

    refObjNew:
      value:
        type: BRANCH
        hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        name: "exampleBranch"

    tagObj:
      value:
        type: TAG
        hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        name: "exampleTag"

    ContentKeyGet:
      value: "example.key"

    ContentKey:
      value:
        elements:
          - example
          - key

    namespaceName:
      value: "a.b.c"

    emptyNamespaceName:
      value:

    namespacesResponse:
      value:
        namespaces:
          - type: NAMESPACE
            elements:
              - a
              - b.c
              - d
          - type: NAMESPACE
            elements:
              - a
              - b
              - d

    namespaceUpdate:
      value:
        propertyUpdates:
          key1: value1
          key2: value2
        propertyRemovals:
          - key3
          - key4

    iceberg:
      value:
        type: ICEBERG_TABLE
        id: b874b5d5-f926-4eed-9be7-b2380d9810c0
        metadataLocation: "/path/to/metadata/"
        snapshotId: 1
        schemaId: 2
        specId: 3
        sortOrderId: 4

    expr_by_namespace:
      value: "entry.namespace.startsWith('a.b.c')"
    expr_by_contentType:
      value: "entry.contentType in ['ICEBERG_TABLE','DELTA_LAKE_TABLE']"
    expr_by_namespace_and_contentType:
      value: "entry.namespace.startsWith('some.name.space') && entry.contentType in ['ICEBERG_TABLE','DELTA_LAKE_TABLE']"
    expr_by_commit_author:
      value: "commit.author=='nessie_author'"
    expr_by_commit_committer:
      value: "commit.committer=='nessie_committer'"
    expr_by_commitTime:
      value: "timestamp(commit.commitTime) > timestamp('2021-05-31T08:23:15Z')"
    expr_by_commit_operations_in_namespace:
      value: "operations.exists(op, op.key.startsWith('some.name.space.'))"
    expr_by_commit_operations_table_name:
      value: "operations.exists(op, op.name == 'BaseTable')"
    expr_by_commit_operations_type:
      value: "operations.exists(op, op.type == 'PUT')"
    expr_by_refType:
      value: "refType == 'BRANCH'"
    expr_by_ref_name:
      value: "ref.name == 'my-tag-or-branch'"
    expr_by_ref_commit:
      value: "commit.message == 'invent awesome things'"

    commitMessage:
      value: "Example Commit Message"

    multiGetResponse:
      value:
        contents:
          - content:
              type: ICEBERG_TABLE
              id: b874b5d5-f926-4eed-9be7-b2380d9810c0
              metadataLocation: "/path/to/metadata/"
              snapshotId: 1
              schemaId: 2
              specId: 3
              sortOrderId: 4
            key:
              elements:
                - example
                - key

    multiGetRequest:
      value:
        requestedKeys:
          - elements:
              - example
              - key

    entriesResponse:
      value:
        token: "xxx"
        entries:
          - name:
              elements:
                - example
                - key
            type: ICEBERG_TABLE
        prefixes:
          - elements:
              - example
              - a
          - elements:
              - example
              - b

    types:
      value:
        - ICEBERG_TABLE

    merge:
      value:
        fromHash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        fromRefName: "source-ref-name"
        defaultKeyMergeMode: "NORMAL"
        keyMergeModes:
          - key:
              elements:
                - example
                - key
              mergeBehavior: "FORCE"
        dryRun: false
        fetchAdditionalInfo: false
        returnConflictAsResult: true

    transplant:
      value:
        hashesToTransplant:
          - "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        fromRefName: "source-ref-name"
        defaultKeyMergeMode: "NORMAL"
        keyMergeModes:
          - key:
              elements:
                - example
                - key
              mergeBehavior: "FORCE"
        dryRun: false
        fetchAdditionalInfo: false
        returnConflictAsResult: true

    mergeResponseSuccess:
      value:
        wasApplied: true
        wasSuccessful: true
        resultantTargetHash: "8a2f19888eb620c25b0d2cbcddfdf56fb2d3e9dd443c6d29e37c567493fc5d3b"
        commonAncestor: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        targetBranch: "main"
        effectiveTargetHash: "e9058b675c519b3542cd8155aed42ecf1ddb4e55874e3eb241b30b96f861566a"
        expectedHash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
        sourceCommits:
          - commitMeta:
              author: "authorName <authorName@example.com>"
              authorTime: "2021-04-07T14:42:25.534748Z"
              hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
              message: "Example Commit Message"
            operations:
              - type: PUT
                key:
                  elements:
                    - example
                    - key
                content:
                  type: ICEBERG_TABLE
                  id: b874b5d5-f926-4eed-9be7-b2380d9810c0
                  metadataLocation: "/path/to/metadata/"
                  snapshotId: 1
                  schemaId: 2
                  specId: 3
                  sortOrderId: 4
            parentCommitHash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        targetCommits:
          - commitMeta:
              author: "authorName <authorName@example.com>"
              authorTime: "2021-04-07T14:42:25.534748Z"
              hash: "e9058b675c519b3542cd8155aed42ecf1ddb4e55874e3eb241b30b96f861566a"
              message: "Example Commit Message"
            operations:
              - type: PUT
                key:
                  elements:
                    - example
                    - key
                content:
                  type: ICEBERG_TABLE
                  id: b874b5d5-f926-4eed-9be7-b2380d9810c0
                  metadataLocation: "/path/to/metadata/"
                  snapshotId: 1
                  schemaId: 2
                  specId: 3
                  sortOrderId: 4
            parentCommitHash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        details:
          - key:
              elements:
                - example
                - key
            mergeBehavior: "NORMAL"
            conflictType: "NONE"
            sourceCommits:
            targetCommits:
              - "e9058b675c519b3542cd8155aed42ecf1ddb4e55874e3eb241b30b96f861566a"

    mergeResponseFail:
      value:
        wasApplied: false
        wasSuccessful: false
        resultantTargetHash: "8a2f19888eb620c25b0d2cbcddfdf56fb2d3e9dd443c6d29e37c567493fc5d3b"
        commonAncestor: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        targetBranch: "main"
        effectiveTargetHash: "8a2f19888eb620c25b0d2cbcddfdf56fb2d3e9dd443c6d29e37c567493fc5d3b"
        expectedHash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
        sourceCommits:
          - commitMeta:
              author: "authorName <authorName@example.com>"
              authorTime: "2021-04-07T14:42:25.534748Z"
              hash: "88012047ce424686ca55e8bb228ae9d9cbd6f7bbfc800d830a53a6edf2d55ffb"
              message: "Example Commit Message"
            operations:
              - type: PUT
                key:
                  elements:
                    - example
                    - key
                content:
                  type: ICEBERG_TABLE
                  id: b874b5d5-f926-4eed-9be7-b2380d9810c0
                  metadataLocation: "/path/to/metadata/"
                  snapshotId: 1
                  schemaId: 2
                  specId: 3
                  sortOrderId: 4
            parentCommitHash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        targetCommits:
          - commitMeta:
              author: "authorName <authorName@example.com>"
              authorTime: "2021-04-07T14:42:25.534748Z"
              hash: "54388c80e6387b8cfa4cf3e7c7909073ffc761f9c7f0d6154ec0d5c5829a4503"
              message: "Example Commit Message"
            operations:
              - type: PUT
                key:
                  elements:
                    - example
                    - key
                content:
                  type: ICEBERG_TABLE
                  id: b874b5d5-f926-4eed-9be7-b2380d9810c0
                  metadataLocation: "/path/to/metadata/"
                  snapshotId: 1
                  schemaId: 2
                  specId: 3
                  sortOrderId: 4
            parentCommitHash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
        details:
          - key:
              elements:
                - example
                - key
            mergeBehavior: "NORMAL"
            conflictType: "UNRESOLVABLE"
            sourceCommits:
              - "88012047ce424686ca55e8bb228ae9d9cbd6f7bbfc800d830a53a6edf2d55ffb"
            targetCommits:
              - "54388c80e6387b8cfa4cf3e7c7909073ffc761f9c7f0d6154ec0d5c5829a4503"

    operations:
      value:
        commitMeta:
          author: "authorName <authorName@example.com>"
          authorTime: "2021-04-07T14:42:25.534748Z"
          hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
          message: "Example Commit Message"
          properties:
            additionalProp1: "xxx"
            additionalProp2: "yyy"
            additionalProp3: "zzz"
          signedOffBy: "signedOffByName <signedOffBy@example.com>"
        operations:
          - type: PUT
            key:
              elements:
                - example
                - key
            content:
              type: ICEBERG_TABLE
              id: b874b5d5-f926-4eed-9be7-b2380d9810c0
              metadataLocation: "/path/to/metadata/"
              snapshotId: 1
              schemaId: 2
              specId: 3
              sortOrderId: 4

    logResponseAdditionalInfo:
      value:
        token: "xxx"
        logEntries:
          - commitMeta:
              author: "authorName <authorName@example.com>"
              authorTime: "2021-04-07T14:42:25.534748Z"
              commitTime: "2021-04-07T14:42:25.534748Z"
              committer: "committerName <committerName@example.com>"
              hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
              message: "Example Commit Message"
              properties:
                additionalProp1: "xxx"
                additionalProp2: "yyy"
                additionalProp3: "zzz"
              signedOffBy: "signedOffByName <signedOffBy@example.com>"
            parentCommitHash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
            operations:
              - type: DELETE
                key:
                  elements:
                    - deleted
                    - table
              - type: PUT
                key:
                  elements:
                    - example
                    - key
                content:
                  type: ICEBERG_TABLE
                  id: b874b5d5-f926-4eed-9be7-b2380d9810c0
                  metadataLocation: "/path/to/metadata/"
                  snapshotId: 1
                  schemaId: 2
                  specId: 3
                  sortOrderId: 4
    logResponseSimple:
      value:
        token: "xxx"
        logEntries:
          - commitMeta:
              author: "authorName <authorName@example.com>"
              authorTime: "2021-04-07T14:42:25.534748Z"
              commitTime: "2021-04-07T14:42:25.534748Z"
              committer: "committerName <committerName@example.com>"
              hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
              message: "Example Commit Message"
              properties:
                additionalProp1: "xxx"
                additionalProp2: "yyy"
                additionalProp3: "zzz"
              signedOffBy: "signedOffByName <signedOffBy@example.com>"

    referencesResponse:
      value:
        token: null
        hasMore: false
        references:
          - type: BRANCH
            hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
            name: "exampleBranch"
          - type: TAG
            hash: "abcdef4242424242424242424242beef00dead42112233445566778899001122"
            name: "exampleTag"
          - type: BRANCH
            hash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
            name: "main"

    referencesResponseWithMetadata:
      value:
        token: null
        hasMore: false
        references:
          - type: BRANCH
            hash: "84c57a20c5e956af4af40f3cc34ecc8a9028b9586da135c79011b1867aa3191d"
            name: "main"
            metadata:
              commitMetaOfHEAD:
                hash: "84c57a20c5e956af4af40f3cc34ecc8a9028b9586da135c79011b1867aa3191d"
                committer: ""
                author: "nessie-author"
                signedOffBy: null
                message: "update table"
                commitTime: "2021-11-26T08:01:13.855974Z"
                authorTime: "2021-11-26T08:01:13.852826Z"
                properties: {}
          - type: BRANCH
            hash: "da086850076827d2989c8ee1d7fd22f152f525d46a0441f2b22ad8119c0bbbe5"
            name: "dev"
            metadata:
              numCommitsAhead: 1
              numCommitsBehind: 2
              commonAncestorHash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
              numTotalCommits: 42
              commitMetaOfHEAD:
                hash: "da086850076827d2989c8ee1d7fd22f152f525d46a0441f2b22ad8119c0bbbe5"
                committer: ""
                author: "nessie-author"
                signedOffBy: null
                message: "update table X"
                commitTime: "2021-11-26T08:01:13.834397Z"
                authorTime: "2021-11-26T08:01:13.831371Z"
                properties: {}
          - type: BRANCH
            hash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
            name: "dev2"
            metadata:
              numCommitsAhead: 0
              numCommitsBehind: 2
              commonAncestorHash: "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
          - type: TAG
            hash: "a682bfdcd5d357b5c964ef07e2eef61fabba42cb8effa8d62357df45a6cc0371"
            name: "testTag1"
            metadata:
              numCommitsAhead: null
              numCommitsBehind: null
              commonAncestorHash: null
              numTotalCommits: 42
              commitMetaOfHEAD:
                hash: "a682bfdcd5d357b5c964ef07e2eef61fabba42cb8effa8d62357df45a6cc0371"
                committer: ""
                author: "nessie-author"
                signedOffBy: null
                message: "update table Y"
                commitTime: "2021-11-23T08:01:14.834397Z"
                authorTime: "2021-11-23T08:01:14.831371Z"
                properties: {}
          - type: TAG
            hash: "da086850076827d2989c8ee1d7fd22f152f525d46a0441f2b22ad8119c0bbbe5"
            name: "testTag2"
            metadata:
              numCommitsAhead: null
              numCommitsBehind: null
              commonAncestorHash: null
              numTotalCommits: 42
              commitMetaOfHEAD:
                hash: "da086850076827d2989c8ee1d7fd22f152f525d46a0441f2b22ad8119c0bbbe5"
                committer: ""
                author: "nessie-author"
                signedOffBy: null
                message: "update table X"
                commitTime: "2021-11-26T08:01:13.834397Z"
                authorTime: "2021-11-26T08:01:13.831371Z"
                properties: {}

    diffResponse:
      value:
        diffs:
          - key:
              elements:
                - example
                - key
            from:
              type: ICEBERG_TABLE
              id: "f350b391-f492-41eb-9959-730a8c49f01e"
              metadataLocation: "/path/to/metadata/"
              snapshotId: 23
              schemaId: 15
              specId: 15
              sortOrderId: 15
            to:
              type: ICEBERG_TABLE
              id: "dec31d0a-7d4b-4534-8c24-24f08eda33b2"
              metadataLocation: "/path/to/metadata/"
              snapshotId: 24
              schemaId: 16
              specId: 16
              sortOrderId: 16
